<!--OrganizerActiveHistoryIndex-->
<!--
    
    顯示舉辦過的歷史資料
    這邊只是剛進來的index  
    
    RRRRRRRRRRRRRRRRRRRRRRRR
-->

<div id="app">
    <div class="container mt-3">
        <h5>歷史活動</h5>
        <div>
            <a class="btn btn-primary btn-sm" asp-controller="confirm" asp-action="OrganizerActiveCheckIndex">上一頁</a>
        </div>
        <div class="row mt-3">
            <div class="mt-2" style="background-color:rgba(255,255,255,0.7);">
                <table class="table table-striped">
                    <thead style="position: sticky; top: 0; z-index: 1; background-color: white;">
                        <tr class="bg-success" style="color:white">
                            <th scope="col">活動id</th>
                            <th scope="col">活動照片</th>
                            <th scope="col">活動名稱</th>
                            <th scope="col">開始時間</th>
                            <th scope="col">結束時間 </th>
                            <th scope="col"></th>
                        </tr>
                    </thead>

                    <tbody>

                        <tr v-for="N in Activity">
                            <th scope="row">{{N.activityId}}</th>@* 活動ID *@
                            <td><img :src="N.activityPhoto" :alt="N.activityId" style="width:160px;height:90"></img></td>@* 活動照片 *@
                            <td>{{N.activityName}}</td>@* 活動名稱 *@
                            <td>{{N.startTime}}</td>@* 開始時間 *@
                            <td>{{N.endTime}}</td>@* 結束時間 *@
                            <td style="width:150px;">
                                <button :btn-id="N.activityId" class="btn btn-sm btn-secondary mb-1" @@click="ActInfo">
                                    活動資訊
                                </button>
                                <button :btn-id="N.activityId" class="btn btn-sm btn-warning" @@click="checkInfo">
                                    簽到資訊
                                </button>
                            </td>
                        </tr>
                    </tbody>
                </table>

            </div>
        </div>

    </div>
</div>

<script src="https://unpkg.com/vue@3.4.26/dist/vue.global.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<!--時間轉型工具-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js"></script>

<script>
    //路徑
    const vuebase = "https://localhost:7271"

    //活動方id
    const organizerid = sessionStorage.getItem("OrganizerId");

    //Vue本體
    //vue本體
    const vueApp = {
        data() {
            return {
                Activity: [],
                activityId: "",
                activityName: "",
                activityPhoto: "",
                startTime: "",
                endTime: "",
            }
        },
        methods: {
            list: function () {
                // alert("list")
                let _this = this

                axios.get(`/Confirm/ActiveHistoryList/${organizerid}`)
                    .then(response => {

                        let res = [];
                        for (let e of response.data) {

                            res.push({
                                activityId: e.activityId,
                                activityPhoto: `data:image/jpeg;base64,${e.activityPhoto}`,
                                activityName: e.activityName,
                                startTime: moment(e.startTime).format('YYYY-MM-DD HH:mm'),
                                endTime: moment(e.endTime).format('YYYY-MM-DD HH:mm'),
                            });
                        }
                        _this.Activity = res;
                        console.log(_this.Activity)
                    })
                    .catch(err => {
                        alert(err)
                    })
            },
            ActInfo: function () 
            {
                // alert("ActInfo")

                // 從事件對象(event object)中取得觸發事件的按鈕元素
                const btn = event.target;
                // 從按鈕元素中取得自定義屬性"btn-id"
                const btnId = btn.getAttribute("btn-id");

                //設置session
                sessionStorage.removeItem("ActID");
                sessionStorage.setItem("ActID", btnId);

                //呼叫api轉換頁面
                axios.get(`/Confirm/OrganizerActiveHistory_ActInfo/${btnId}`)
                    .then(response => {
                        // console.log(response);
                        window.location.href = (`/Confirm/OrganizerActiveHistory_ActInfo/${btnId}`)
                    })
                    .catch(err => { 
                        alert(err)
                    })

            },
            checkInfo: function () 
            {
                // alert("checkInfo")
                // 從事件對象(event object)中取得觸發事件的按鈕元素
                const btn = event.target;
                // 從按鈕元素中取得自定義屬性"btn-id"
                const btnId = btn.getAttribute("btn-id");

                //設置session
                sessionStorage.removeItem("ActID");
                sessionStorage.setItem("ActID", btnId);

                //呼叫api轉換頁面
                axios.get(`/Confirm/OrganizerActiveHistory_CheckInfo/${btnId}`)
                    .then(response => {
                        // console.log(response);
                        window.location.href = (`/Confirm/OrganizerActiveHistory_CheckInfo/${btnId}`)
                    })
                    .catch(err => {
                        alert(err)
                    })

            }
        },
        mounted:function() {
            let _this = this;
            _this.list();
        
        }
    }


    Vue.createApp(vueApp).mount("#app");
</script>