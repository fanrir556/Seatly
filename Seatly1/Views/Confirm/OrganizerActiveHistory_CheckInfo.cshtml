<!--OrganizerActiveHistory_CheckInfo-->
<!--
    活動排隊check的檢視
    只是要看歷史
 -->

<!---->

<div id="app">
    <div class="container mt-3">
        <h4>活動編號 : {{activityId}}</h4>
        <img :src="activityPhoto" :alt="activityName" style="width:280px;height:210px;" />
        <h5>活動名稱 : {{activityName}}</h5>
        <div>
            <span>{{startTime}}</span> ~ <span>{{endTime}}</span>
        </div>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>訂單編號</th> <!--OrderId-->
                    <th>使用者名稱</th><!--UserName-->
                    <th>排隊號碼</th><!--WaitingNumber-->
                    <th>識別碼</th><!--ActivityBarcode-->
                    <th>簽到狀態</th><!--Checked-->
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="book in BookOrder" style="height:75px;margin:auto">
                    <td>{{ book.orderId }}</td>
                    <td>{{ book.userName }}</td>
                    <td>{{ book.waitingNumber }}</td>
                    <td>{{ book.activityBarcode }}</td>
                    <td :class="{'text-secondary': book.checked, 'text-danger': !book.checked}">{{ book.checked ? '已簽到' : '未簽到' }}</td>
                </tr>
            </tbody>

        </table>

    </div>


</div>

<script src="https://unpkg.com/vue@3.4.26/dist/vue.global.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js"></script>

<script>
    //路徑
    const vuebase = "https://localhost:7271"

    //活動方id && 活動專屬ID
    const organizerid = sessionStorage.getItem("OrganizerId");
    // console.log(organizerid)
    const ActId = sessionStorage.getItem("ActID");
    // console.log(ActId)

    //掛載Vue
    const vueApp = {
        data() {
            return {
                //活動資訊
                activityId: "",
                activityName: "",
                activityPhoto: "",
                startTime: "",
                endTime: "",

                //排隊資訊
                BookOrder: [],
                orderId: "",
                userName: "",
                waitingNumber: "",
                activityBarcode: "",
                checked: "",
            }
        },
        methods: {
            //活動資訊
            ActInfo: function () {
                // alert("list"); // 可以暫時移除
                let _this = this;

                axios.get(`${vuebase}/Confirm/ActiveInfo/${ActId}`)
                    .then(response => {
                        // 在這裡處理成功的回應
                        var res = response.data
                        // console.log(res);
                        _this.activityId = res[0].activityId

                        aa = res[0].activityPhoto
                        // console.log(aa)
                        _this.activityPhoto = `data:image/jpeg;base64,${aa}`

                        if (res[0].activityName != null) {
                            _this.activityName = res[0].activityName
                        }
                        else {
                            _this.activityName = "沒有名稱"
                        }

                        _this.startTime = moment(res[0].startTime).format('YYYY-MM-DD/HH')
                        _this.endTime = moment(res[0].endTime).format('YYYY-MM-DD/HH')
                    })
                    .catch(err => {
                        alert(err);
                        // 在這裡處理失敗的回應
                    });
            },
            //排隊訂單資訊
            BookInfo: function () {
                let _this = this;
                // alert("Book")
                axios.get(`${vuebase}/Confirm/BookInfo/${ActId}`)
                    .then(response => {
                        // console.log(response)
                        res = response.data
                        // 清空 BookOrder 陣列
                        _this.BookOrder = [];

                        // 將每個項目添加到 BookOrder 陣列中
                        res.forEach(item => {
                            _this.BookOrder.push({
                                orderId: item.orderId,
                                userName: item.userName,
                                waitingNumber: item.waitingNumber,
                                activityBarcode: item.activityBarcode,
                                checked: item.checked
                            });
                        });
                    })
                    .catch(err => {
                        alert(err)
                    });
            },
        },
        mounted: function () {
            let _this = this;
            _this.ActInfo();
            _this.BookInfo();
        }
    };

    Vue.createApp(vueApp).mount("#app");
</script>
